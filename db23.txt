import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;

public class test {
    private static final String DB_URL = "jdbc:mysql://localhost:3306/company";
    private static final String DB_USER = "root";
    private static final String DB_PASSWORD = "";

    public static void main(String[] args) {
        try (Connection connection = DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWORD)) {
            // Create a table for employee details
            createEmployeeTable(connection);

            // Insert records into the Employee table
            insertEmployeeRecords(connection);

            // Retrieve details based on Social Security Number (SSN)
            retrieveEmployeeDetailsBySSN(connection, "123-45-6789");

            // Update the employee state from 'MH' to 'TN'
            updateEmployeeState(connection, "123-45-6789", "TN");

            // Delete all employees from 'Gujrat'
            deleteEmployeesFromState(connection, "Gujrat");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private static void createEmployeeTable(Connection connection) throws SQLException {
        try (Statement statement = connection.createStatement()) {
            String createTableSQL = "CREATE TABLE Employee ("
                    + "SSN VARCHAR(11) PRIMARY KEY,"
                    + "Ename VARCHAR(255),"
                    + "state VARCHAR(255),"
                    + "salary DECIMAL(10, 2))";
            statement.execute(createTableSQL);
        }
    }

    private static void insertEmployeeRecords(Connection connection) throws SQLException {
        String insertSQL = "INSERT INTO Employee (SSN, Ename, state, salary) VALUES (?, ?, ?, ?)";
        try (PreparedStatement preparedStatement = connection.prepareStatement(insertSQL)) {
            preparedStatement.setString(1, "123-45-6789");
            preparedStatement.setString(2, "John Doe");
            preparedStatement.setString(3, "MH");
            preparedStatement.setDouble(4, 50000.00);
            preparedStatement.execute();
        }
    }

    private static void retrieveEmployeeDetailsBySSN(Connection connection, String ssn) throws SQLException {
        String selectSQL = "SELECT * FROM Employee WHERE SSN = ?";
        try (PreparedStatement preparedStatement = connection.prepareStatement(selectSQL)) {
            preparedStatement.setString(1, ssn);
            try (ResultSet resultSet = preparedStatement.executeQuery()) {
                while (resultSet.next()) {
                    System.out.println("SSN: " + resultSet.getString("SSN"));
                    System.out.println("Name: " + resultSet.getString("Ename"));
                    System.out.println("State: " + resultSet.getString("state"));
                    System.out.println("Salary: " + resultSet.getDouble("salary"));
                }
            }
        }
    }

    private static void updateEmployeeState(Connection connection, String ssn, String newState) throws SQLException {
        String updateSQL = "UPDATE Employee SET state = ? WHERE SSN = ?";
        try (PreparedStatement preparedStatement = connection.prepareStatement(updateSQL)) {
            preparedStatement.setString(1, newState);
            preparedStatement.setString(2, ssn);
            preparedStatement.executeUpdate();
        }
    }

    private static void deleteEmployeesFromState(Connection connection, String state) throws SQLException {
        String deleteSQL = "DELETE FROM Employee WHERE state = ?";
        try (PreparedStatement preparedStatement = connection.prepareStatement(deleteSQL)) {
            preparedStatement.setString(1, state);
            preparedStatement.executeUpdate();
        }
    }
}